<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>git push的两种情况</title>
    <link href="/2022/08/04/%E5%85%B3%E4%BA%8Egit-push-%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%83%85%E5%86%B5/"/>
    <url>/2022/08/04/%E5%85%B3%E4%BA%8Egit-push-%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%83%85%E5%86%B5/</url>
    
    <content type="html"><![CDATA[<h2 id="1-将项目克隆到本地"><a href="#1-将项目克隆到本地" class="headerlink" title="1.将项目克隆到本地"></a>1.将项目克隆到本地</h2><blockquote><p>当线上项目已经建立，将代码克隆到本地时，git会自动为仓库地址起别名(origin)，可以直接git push提交。</p></blockquote><h2 id="2-将本地已有项目提交到远程仓库"><a href="#2-将本地已有项目提交到远程仓库" class="headerlink" title="2.将本地已有项目提交到远程仓库"></a>2.将本地已有项目提交到远程仓库</h2><blockquote><p>当本地项目已经有部分内容，线上项目为空时，git push时git不知道向哪儿提交，需要给仓库地址起别名，git remote add 别名 仓库地址，提交代码时使用命令git push 别名 分支名；如果需要省略git push后面的内容，则需要做以下设置：git push –set-upstream 别名 分支名。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>es6块级作用域</title>
    <link href="/2022/08/04/es6%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <url>/2022/08/04/es6%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么需要块级作用域，以及没有块级作用域会出现的问题"><a href="#为什么需要块级作用域，以及没有块级作用域会出现的问题" class="headerlink" title="为什么需要块级作用域，以及没有块级作用域会出现的问题"></a>为什么需要块级作用域，以及没有块级作用域会出现的问题</h2><blockquote><p>ES5 只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。</p></blockquote><h3 id="第一种场景，内层变量可能会覆盖外层变量。"><a href="#第一种场景，内层变量可能会覆盖外层变量。" class="headerlink" title="第一种场景，内层变量可能会覆盖外层变量。"></a>第一种场景，内层变量可能会覆盖外层变量。</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-keyword">var</span> tmp = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(tmp)<br>  <span class="hljs-keyword">if</span> (<span class="hljs-literal">false</span>) &#123;<br>    <span class="hljs-keyword">var</span> tmp = <span class="hljs-string">&#x27;hello world&#x27;</span><br>  &#125;<br>&#125;<br><br>f(); <span class="hljs-comment">// undefined</span><br></code></pre></td></tr></table></figure><blockquote><p>在函数内使用变量时，会先在函数内部寻找变量，内部没有的话再到外层寻找，直到寻找到全局作用域为止。<br>在上面的示例中，由于var声明的变量存在变量提升的问题，所以当执行到<code>console.log(tmp)</code>时，会输出undefined。</p></blockquote><h3 id="第二种场景，用来计数的循环变量泄露为全局变量。"><a href="#第二种场景，用来计数的循环变量泄露为全局变量。" class="headerlink" title="第二种场景，用来计数的循环变量泄露为全局变量。"></a>第二种场景，用来计数的循环变量泄露为全局变量。</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-keyword">var</span> s = <span class="hljs-string">&#x27;hello&#x27;</span><br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">length</span>; i++) &#123;<br>  <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(s[i])<br>&#125;<br><br><span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(i) <span class="hljs-comment">// 5</span><br></code></pre></td></tr></table></figure><blockquote><p>上面代码中，变量i只用来控制循环，但是循环结束后，它并没有消失，泄露成了全局变量。</p></blockquote><h3 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h3><blockquote><p>for循环和if判断并不是一个函数体，不存在函数作用域。在for和if中定义的变量所处的作用域就是for和if所在的作用域。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>块级作用域</tag>
      
      <tag>let</tag>
      
      <tag>变量提升</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown常用语法</title>
    <link href="/2022/07/31/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/07/31/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><blockquote><p>Markdown一共有六级标题，就相当于html中的H1，H2， H3 … H6，在Markdown中在文字前面加上1-6个#号，然后再加上一个空格依次表示是几级标题。</p></blockquote><h3 id="语法：-一级标题h1-二级标题h1-…以此类推。"><a href="#语法：-一级标题h1-二级标题h1-…以此类推。" class="headerlink" title="语法：#一级标题h1 ##二级标题h1 …以此类推。"></a>语法：#一级标题h1 ##二级标题h1 …以此类推。</h3><blockquote><p>需要注意的是，#后面需要加空格，否则判定为普通字符。</p></blockquote><h2 id="2-斜体"><a href="#2-斜体" class="headerlink" title="2.斜体"></a>2.斜体</h2><blockquote><p>在内容的初始位置和结束位置各加一个*即可</p></blockquote><h3 id="语法：-你看我变斜了没？"><a href="#语法：-你看我变斜了没？" class="headerlink" title="语法： *你看我变斜了没？ *"></a>语法： *你看我变斜了没？ *</h3><h3 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><p><em>你看我变斜了没？</em></p></blockquote><h2 id="3-粗体"><a href="#3-粗体" class="headerlink" title="3.粗体"></a>3.粗体</h2><blockquote><p>字体加粗只需要在文字首尾分别加上两个星号（**）即可。</p></blockquote><h3 id="语法：-加粗了吧？"><a href="#语法：-加粗了吧？" class="headerlink" title="语法： **加粗了吧？ **"></a>语法： **加粗了吧？ **</h3><h3 id="效果如下-1"><a href="#效果如下-1" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><p><strong>加粗了吧？</strong></p></blockquote><h2 id="4-删除线"><a href="#4-删除线" class="headerlink" title="4.删除线"></a>4.删除线</h2><blockquote><p>需要让文字从中间划上一横删除线，只需要在文字首尾分别加上两个波浪线符号~~即可。</p></blockquote><h3 id="语法：～～删掉了～～"><a href="#语法：～～删掉了～～" class="headerlink" title="语法：～～删掉了～～"></a>语法：～～删掉了～～</h3><h3 id="效果如下-2"><a href="#效果如下-2" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><p><del>删掉了</del></p></blockquote><h2 id="5-换行"><a href="#5-换行" class="headerlink" title="5.换行"></a>5.换行</h2><blockquote><p>一行文字需要换行，只需要在行末尾回车换行</p></blockquote><h3 id="语法：第一行-直接enter-第二行"><a href="#语法：第一行-直接enter-第二行" class="headerlink" title="语法：第一行 直接enter 第二行"></a>语法：第一行 直接enter 第二行</h3><h3 id="效果如下-3"><a href="#效果如下-3" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><p>第一行<br>第二行</p></blockquote><h2 id="6-列表"><a href="#6-列表" class="headerlink" title="6.列表"></a>6.列表</h2><blockquote><p>列表分为有序列表和无序列表，有序列表只需要在文字前面加上“n.空格（n为任意整数）”即可，这里并不关心多个列表之间整数n的顺序性，只要是整数就行。无序列表只需要在文字前面加上“(标识符)空格”即可。 标识符可以是*，-，+。</p></blockquote><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><blockquote><ul><li>1 </li><li>2</li><li>3</li></ul></blockquote><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><blockquote><ol><li>1 </li><li>2</li><li>3<br>需要注意的是：有序列表前只需加“数字加点”就行,如<code>1.列表项内容</code> <code>1.列表项内容</code> <code>1.列表项内容</code></li></ol></blockquote><h2 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7.分割线"></a>7.分割线</h2><blockquote><p>三个及三个以上的-即可显示出一个分割线(当前行不能有其他文字或符号)。</p></blockquote><h3 id="语法：-1"><a href="#语法：-1" class="headerlink" title="语法：- - -"></a>语法：- - -</h3><h3 id="效果如下-4"><a href="#效果如下-4" class="headerlink" title="效果如下"></a>效果如下</h3><hr><h2 id="8-高亮"><a href="#8-高亮" class="headerlink" title="8.高亮"></a>8.高亮</h2><blockquote><p>一般在插入代码时使用高亮，使用一对任意个数的<code>`</code> 将代码包裹即可</p></blockquote><h3 id="效果如下-5"><a href="#效果如下-5" class="headerlink" title="效果如下"></a>效果如下</h3><p><code>我高亮了</code></p><h2 id="9-代码块"><a href="#9-代码块" class="headerlink" title="9.代码块"></a>9.代码块</h2><blockquote><p>和高亮语法类似，用一对<code>```</code>将代码包裹，并且需要换行。如果需要换行直接回车，缩进可以直接使用tab键。</p></blockquote><h3 id="效果如下-6"><a href="#效果如下-6" class="headerlink" title="效果如下"></a>效果如下</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">1212</span><br></code></pre></td></tr></table></figure><h2 id="10-引用"><a href="#10-引用" class="headerlink" title="10.引用"></a>10.引用</h2><blockquote><p>使用大于号即可实现引用。如果多级引用则可以通过增加&gt;的个数实现，中间需要进行回车。<br>语法：&gt; 第一级引用 &gt; 第二级引用</p></blockquote><h3 id="效果如下-7"><a href="#效果如下-7" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><p>第一级引用 </p><blockquote><p>第二级引用</p><blockquote><p>第三级引用</p></blockquote></blockquote></blockquote><h2 id="11-表格"><a href="#11-表格" class="headerlink" title="11.表格"></a>11.表格</h2><blockquote><ol><li>|和|之间形成单元格。</li><li>第一行为表头，内容默认加粗居中。</li><li>第二行-和：组合，标记本列单元格对齐方式。无:号，为默认左对齐；两端:为居中；左、右其中一端:向该 侧对齐。</li><li>其余行为普通单元格。</li><li>注意：（1）第二行不可省略，否则语法不完整；（2）表格必须为整段（或者用—封顶），中间不能有空行。</li><li>语法<br>|表头第一列|表头第二列|表头第三列<br>|—————|:————-:|————–:|<br>|表项第一列|表项第二列|表项第三列|<br>|默认居左|居中|居右|</li></ol></blockquote><h3 id="效果如下-8"><a href="#效果如下-8" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><table><thead><tr><th>表头第一列</th><th align="center">表头第二列</th><th align="right">表头第三列</th></tr></thead><tbody><tr><td>表项第一列</td><td align="center">表项第二列</td><td align="right">表项第三列</td></tr><tr><td>默认居左</td><td align="center">居中</td><td align="right">居右</td></tr></tbody></table></blockquote><h2 id="12-脚注"><a href="#12-脚注" class="headerlink" title="12.脚注"></a>12.脚注</h2><blockquote><p>语法标记：[^1 ]+[^1 ]:注释内容（[ ^1 ]是角标，[ ^1 ]:注释内容是对应的注释列表，必须一一对应）<br>解说：写文章时，不可避免要用到读者陌生的词汇或典故，就地解释会把文风带偏，不作说明显然治学不严，脚注为此而生。<br>语法：<br>我今天开通了简书[^9 ]，我把脚注放在了文章末尾。<br>[ ^9]:简书：创作你的创作。</p></blockquote><h3 id="效果如下-9"><a href="#效果如下-9" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><p>我把脚注放到了文章末尾<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="welcome to my blog">[1]</span></a></sup></p></blockquote><h2 id="13-超链接"><a href="#13-超链接" class="headerlink" title="13.超链接"></a>13.超链接</h2><blockquote><p>使用中括号[]内部写显示在网页上的文本，紧接着用英文半角()，内部写两个参数，第一个是链接的实际地址(可以是远程url或者本地地址)，第二个参数用双引号包裹，与实际地址以空格分开，双引号内的内容可以省略，为鼠标悬浮时候的说明。<br>语法：[百度](<a href="https://www.baidu.com/">https://www.baidu.com/</a> ‘百度一下’）<br>注意：<br>超链接分为内联和引用两种方式：<br>内联方式，满足一般使用需求，直观方便，即用即写。 语法就是上边介绍的。<br>引用方式，适合添加多个网址的文章，可以避免在正文中出现大量网址，保持编辑可读性；也适合同一网址多处引用，当网址有改动或修改时，只需修改列表即可，无需逐个修改，类似宏定义。<br>语法：<br>看电影[点这里][序号1]<br>看图片[点这里][序号2]<br>看美女[点这里][序号3]<br>我还要看电影[点这里][序号1]</p></blockquote><!-- 以下三行内容作为引用值，不显示  --><h3 id="内联"><a href="#内联" class="headerlink" title="内联"></a>内联</h3><blockquote><p><a href="https://www.baidu.com/" title="百度">百度</a></p></blockquote><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote><p>看电影<a href="https://www.douban.com/" title="douban">点这里</a><br>看平面设计<a href="http://huaban.com/" title="huaban">点这里</a></p></blockquote><h2 id="14-图片"><a href="#14-图片" class="headerlink" title="14.图片"></a>14.图片</h2><blockquote><p>也分为内联方式和引用方式，语法同超链接的类似，只需要在最前面加上！即可。<br>语法：<br>![图片] (地址 ）<br>[xxx]: 地址<br>![图片][xxx]</p></blockquote><h3 id="内联-1"><a href="#内联-1" class="headerlink" title="内联"></a>内联</h3><blockquote><p><img src="https://avatars.githubusercontent.com/u/97815660?v=4" alt="图片"></p></blockquote><h3 id="引用-1"><a href="#引用-1" class="headerlink" title="引用"></a>引用</h3><blockquote><p><img src="https://avatars.githubusercontent.com/u/97815660?v=4" alt="图片"></p></blockquote><h2 id="15-超链接发邮件"><a href="#15-超链接发邮件" class="headerlink" title="15.超链接发邮件"></a>15.超链接发邮件</h2><blockquote><p>在一对尖括号&lt;&gt;内放入邮箱地址。<br>语法：&lt; <a href="mailto:&#x31;&#52;&#x39;&#55;&#x36;&#56;&#57;&#x32;&#x35;&#x38;&#x40;&#113;&#113;&#46;&#x63;&#111;&#x6d;">&#x31;&#52;&#x39;&#55;&#x36;&#56;&#57;&#x32;&#x35;&#x38;&#x40;&#113;&#113;&#46;&#x63;&#111;&#x6d;</a> &gt;</p></blockquote><h3 id="效果如下-10"><a href="#效果如下-10" class="headerlink" title="效果如下"></a>效果如下</h3><blockquote><p><a href="mailto:&#x31;&#52;&#57;&#x37;&#x36;&#56;&#57;&#x32;&#x35;&#56;&#64;&#113;&#113;&#46;&#x63;&#x6f;&#x6d;">&#x31;&#52;&#57;&#x37;&#x36;&#56;&#57;&#x32;&#x35;&#56;&#64;&#113;&#113;&#46;&#x63;&#x6f;&#x6d;</a></p></blockquote><h2 id="16-反斜杠"><a href="#16-反斜杠" class="headerlink" title="16.反斜杠"></a>16.反斜杠</h2><blockquote><p>使用\表示反斜杠，相当于反转义作用。在你不想显示Markdown标记时可以使用反斜杠。</p></blockquote><hr><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>welcome to my blog<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>markdown语法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css子元素和父元素margin重叠</title>
    <link href="/2022/07/31/css%E5%AD%90%E5%85%83%E7%B4%A0%E5%92%8C%E7%88%B6%E5%85%83%E7%B4%A0margin%E9%87%8D%E5%8F%A0/"/>
    <url>/2022/07/31/css%E5%AD%90%E5%85%83%E7%B4%A0%E5%92%8C%E7%88%B6%E5%85%83%E7%B4%A0margin%E9%87%8D%E5%8F%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="子元素和父元素共享margin"><a href="#子元素和父元素共享margin" class="headerlink" title="子元素和父元素共享margin"></a>子元素和父元素共享margin</h2><blockquote><p>有时会出现子元素和父元素共享外边距的情况，如下图，父元素并没有设置上外边距，但是随着子元素一起移动了</p></blockquote><div align=center><img src="/img/post_img/css0.png" width="200"></div><h3 id="解决方法有多种，例如："><a href="#解决方法有多种，例如：" class="headerlink" title="解决方法有多种，例如："></a>解决方法有多种，例如：</h3><blockquote><ol><li>开启绝对定位；</li><li>给父元素设置overflow：hidden；</li><li>给父元素设置内边距；</li><li>给父元素设置边框；</li></ol></blockquote>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fixBug</tag>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webpack打包失败</title>
    <link href="/2022/07/30/webpack%E6%89%93%E5%8C%85%E5%A4%B1%E8%B4%A5/"/>
    <url>/2022/07/30/webpack%E6%89%93%E5%8C%85%E5%A4%B1%E8%B4%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="关于webpack打包时遇到的问题"><a href="#关于webpack打包时遇到的问题" class="headerlink" title="关于webpack打包时遇到的问题"></a>关于webpack打包时遇到的问题</h2><h3 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h3><p><img src="/img/post_img/webpack0.png"></p><h3 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h3><p><img src="/img/post_img/webpack1.png"></p><h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><blockquote><p>路径的问题，需要进入到dome1下在执行webpack命令(即webpack.config.js所在文件夹下)</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>webpack</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fixBug</tag>
      
      <tag>webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>v-for和v-if同时使用</title>
    <link href="/2022/07/30/v-for%E5%92%8Cv-if%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/07/30/v-for%E5%92%8Cv-if%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="关于v-for和v-if不建议同时使用的问题"><a href="#关于v-for和v-if不建议同时使用的问题" class="headerlink" title="关于v-for和v-if不建议同时使用的问题"></a>关于v-for和v-if不建议同时使用的问题</h2><blockquote><p>vue官方不建议v-for和v-if同时使用，当业务需要时可以在外层加template标签，将v-for加到template标签上</p></blockquote><p><img src="/img/post_img/vue0.png"></p>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fixBug</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>connect-mongo重用MongoDB</title>
    <link href="/2022/07/30/connect-mongo%E9%87%8D%E7%94%A8MongoDB/"/>
    <url>/2022/07/30/connect-mongo%E9%87%8D%E7%94%A8MongoDB/</url>
    
    <content type="html"><![CDATA[<h2 id="connect-mongo重用MongoDB"><a href="#connect-mongo重用MongoDB" class="headerlink" title="connect-mongo重用MongoDB"></a>connect-mongo重用MongoDB</h2><h3 id="以下是官方给出的示例"><a href="#以下是官方给出的示例" class="headerlink" title="以下是官方给出的示例"></a>以下是官方给出的示例</h3><p><img src="/img/post_img/mongo0.png"><br>关于如何创建MongoClient,这里并没有具体的方法，需要自己参考文档</p><h3 id="以下是我个人配置的方法：将clientPromise导出，然后在MongoStore-create-中引入即可"><a href="#以下是我个人配置的方法：将clientPromise导出，然后在MongoStore-create-中引入即可" class="headerlink" title="以下是我个人配置的方法：将clientPromise导出，然后在MongoStore.create()中引入即可"></a>以下是我个人配置的方法：将clientPromise导出，然后在MongoStore.create()中引入即可</h3><p><img src="/img/post_img/mongo1.png"></p>]]></content>
    
    
    <categories>
      
      <category>node</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node</tag>
      
      <tag>connect-mongo</tag>
      
      <tag>MongoDB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tag插件</title>
    <link href="/2022/07/30/fluid_tag/"/>
    <url>/2022/07/30/fluid_tag/</url>
    
    <content type="html"><![CDATA[<h2 id="1-便签"><a href="#1-便签" class="headerlink" title="1.便签"></a>1.便签</h2><blockquote><p>markdown 中加入如下的代码来使用便签：</p></blockquote><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">note</span> success %&#125;</span><span class="language-xml"></span><br><span class="language-xml">文字 或者 `markdown` 均可</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endnote</span> %&#125;</span><br></code></pre></td></tr></table></figure><h3 id="可选标签类型如下"><a href="#可选标签类型如下" class="headerlink" title="可选标签类型如下"></a>可选标签类型如下</h3><blockquote><p><code>primary</code> <code>secondary</code> <code>success</code> <code>danger</code> <code>warning</code> <code>info</code> <code>light</code> 更改代码中 类型即可。 <br><br>使用时 <code>&#123;% note primary %&#125; 和 &#123;% endnote %&#125;</code> 需单独一行，否则会出现问题。</p></blockquote><h4 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h4><div class="note note-success">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><div class="note note-primary">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><div class="note note-secondary">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><div class="note note-danger">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><div class="note note-warning">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><div class="note note-info">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><div class="note note-light">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><h2 id="2-行内标签"><a href="#2-行内标签" class="headerlink" title="2.行内标签"></a>2.行内标签</h2><blockquote><p>在 markdown 中加入如下的代码来使用 Label：</p></blockquote><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-template-variable">&#123;% label primary <span class="hljs-variable">@text</span> %&#125;</span><br></code></pre></td></tr></table></figure><h3 id="可选Label"><a href="#可选Label" class="headerlink" title="可选Label"></a>可选Label</h3><blockquote><p><code>primary</code> <code>default</code> <code>info</code> <code>success</code> <code>warning</code> <code>danger</code></p></blockquote><h4 id="效果如下-1"><a href="#效果如下-1" class="headerlink" title="效果如下"></a>效果如下</h4><span class="label label-primary">text</span><span class="label label-default">text</span><span class="label label-info">text</span><span class="label label-success">text</span><span class="label label-warning">text</span><span class="label label-danger">text</span><h2 id="3-勾选框"><a href="#3-勾选框" class="headerlink" title="3.勾选框"></a>3.勾选框</h2><blockquote><p>在 markdown 中加入如下的代码来使用 Checkbox：</p></blockquote><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">cb</span> text, checked?, incline? %&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>text：显示的文字<br>checked：默认是否已勾选，默认 false<br>incline: 是否内联（可以理解为后面的文字是否换行），默认 false</p></blockquote><h4 id="效果如下-2"><a href="#效果如下-2" class="headerlink" title="效果如下"></a>效果如下</h4>            <input type="checkbox" disabled >勾选框                       <input type="checkbox" disabled checked="checked">勾选框          <h2 id="4-按钮"><a href="#4-按钮" class="headerlink" title="4.按钮"></a>4.按钮</h2><blockquote><p>你可以在 markdown 中加入如下的代码来使用 Button：</p></blockquote><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">btn</span> url, text, title %&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>url：跳转链接<br>text：显示的文字<br>title：鼠标悬停时显示的文字（可选）</p></blockquote><h4 id="效果如下-3"><a href="#效果如下-3" class="headerlink" title="效果如下"></a>效果如下</h4><a class="btn" href="https://www.baidu.com/"  title="去搜索" target="_blank">百度</a>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo workflow</title>
    <link href="/2022/07/29/workflow/"/>
    <url>/2022/07/29/workflow/</url>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></td></tr></table></figure><h2 id="第一步-配置一键部署-修改-config-yml配置文件-实例如下"><a href="#第一步-配置一键部署-修改-config-yml配置文件-实例如下" class="headerlink" title="第一步:配置一键部署,修改_config.yml配置文件,实例如下"></a>第一步:配置一键部署,修改<code>_config.yml</code>配置文件,实例如下</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://令牌@仓库地址</span><br></code></pre></td></tr></table></figure><h2 id="第二步-安装自动发布到github上的插件"><a href="#第二步-安装自动发布到github上的插件" class="headerlink" title="第二步:安装自动发布到github上的插件"></a>第二步:安装自动发布到github上的插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h2 id="第三步-创建新的文章"><a href="#第三步-创建新的文章" class="headerlink" title="第三步:创建新的文章"></a>第三步:创建新的文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new 文章标题<br></code></pre></td></tr></table></figure><h2 id="第四步-使用markdown编辑"><a href="#第四步-使用markdown编辑" class="headerlink" title="第四步:使用markdown编辑"></a>第四步:使用markdown编辑</h2><h2 id="第五步-一键部署"><a href="#第五步-一键部署" class="headerlink" title="第五步:一键部署"></a>第五步:一键部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate --deploy<br>or<br>hexo deploy --generate<br></code></pre></td></tr></table></figure><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g -d<br>or<br>hexo d -g<br></code></pre></td></tr></table></figure><h3 id="插入图片测试"><a href="#插入图片测试" class="headerlink" title="插入图片测试"></a>插入图片测试</h3><p><img src="/img/ykls1.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git入门</title>
    <link href="/2022/07/29/Git%E5%85%A5%E9%97%A8/"/>
    <url>/2022/07/29/Git%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h2><h3 id="最最最常用"><a href="#最最最常用" class="headerlink" title="最最最常用"></a>最最最常用</h3><blockquote><p><code>git init</code> <code>git clone</code> <code>git status</code> <code>git add</code> <code>git commit</code> <code>git push</code> <code>git pull</code></p></blockquote><h2 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1.新建仓库"></a>1.新建仓库</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">git init <span class="hljs-regexp">//</span>初始化仓库<br><br>git init 仓库名称 <span class="hljs-regexp">//</span>新建并初始化仓库<br><br>git clone [url] <span class="hljs-regexp">//</span>下载已有项目(包含历史版本，如果只克隆包含最近的一次commit的一个分支的话，<br>可以加 --depth=<span class="hljs-number">1</span>，下载体积会相对减小)<br></code></pre></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --list <span class="hljs-comment">//查看git配置信息</span><br><br>git <span class="hljs-keyword">config</span> -e [--<span class="hljs-keyword">global</span>] <span class="hljs-comment">//编辑git配置文件</span><br><br>git <span class="hljs-keyword">config</span> [--<span class="hljs-keyword">global</span>] user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;[name]&quot;</span> <span class="hljs-comment">//设置用户名</span><br><br>git <span class="hljs-keyword">config</span> [--<span class="hljs-keyword">global</span>] user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;[email address]&quot;</span> <span class="hljs-comment">//设置用户邮箱</span><br></code></pre></td></tr></table></figure><h2 id="3-增加-x2F-删除文件"><a href="#3-增加-x2F-删除文件" class="headerlink" title="3.增加&#x2F;删除文件"></a>3.增加&#x2F;删除文件</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">git</span> <span class="hljs-keyword">add</span> [file1] [file2] ... <span class="hljs-comment">// 添加指定文件到暂存区</span><br><span class="hljs-symbol">git</span> <span class="hljs-keyword">add</span> [dir] <span class="hljs-comment">// 添加指定目录到暂存区，包括子目录</span><br><span class="hljs-symbol">git</span> <span class="hljs-keyword">add</span> ./  <span class="hljs-comment">// 添加当前目录的所有文件到暂存区</span><br></code></pre></td></tr></table></figure><h3 id="以下使用较少一些"><a href="#以下使用较少一些" class="headerlink" title="以下使用较少一些"></a>以下使用较少一些</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss">git rm <span class="hljs-selector-attr">[file1]</span> <span class="hljs-selector-attr">[file2]</span> ... <span class="hljs-comment">//删除工作区文件，并且将这次删除放入暂存区</span><br>git rm <span class="hljs-attr">--cached</span> <span class="hljs-selector-attr">[file]</span> <span class="hljs-comment">//停止追踪指定文件，但该文件会保留在工作区</span><br>git mv <span class="hljs-selector-attr">[file-original]</span> <span class="hljs-selector-attr">[file-renamed]</span><br></code></pre></td></tr></table></figure><h2 id="4-代码提交"><a href="#4-代码提交" class="headerlink" title="4.代码提交"></a>4.代码提交</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git commit -m <span class="hljs-selector-attr">[message]</span> <span class="hljs-comment">//提交暂存区到仓库区</span><br><br>git commit <span class="hljs-selector-attr">[file1]</span> <span class="hljs-selector-attr">[file2]</span> ... -m <span class="hljs-selector-attr">[message]</span> <span class="hljs-comment">//提交暂存区的指定文件到仓库区</span><br><br> <br>git commit -<span class="hljs-selector-tag">a</span> <span class="hljs-comment">//提交工作区自上次commit之后的变化，直接到仓库区(跳过暂存区)</span><br><br> <br>git commit <span class="hljs-attr">--amend</span> -m <span class="hljs-selector-attr">[message]</span>  <span class="hljs-comment">//使用一次新的commit，替代上一次提交 </span><br><span class="hljs-comment">//如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br> <br>git commit <span class="hljs-attr">--amend</span> <span class="hljs-selector-attr">[file1]</span> <span class="hljs-selector-attr">[file2]</span> ... <span class="hljs-comment">//重做上一次commit，并包括指定文件的新变化</span><br></code></pre></td></tr></table></figure><h2 id="5-分支"><a href="#5-分支" class="headerlink" title="5.分支"></a>5.分支</h2><div class="note note-success">            <p>以下的[commit]代表git的版本号，为hash值</p>          </div><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git branch <span class="hljs-comment">//列出所有本地分支</span><br><br>git branch -r <span class="hljs-comment">//列出所有远程分支</span><br><br>git branch -<span class="hljs-selector-tag">a</span> <span class="hljs-comment">//列出所有本地分支和远程分支</span><br><br>git branch <span class="hljs-selector-attr">[branch-name]</span>  <span class="hljs-comment">//新建一个分支，但依然停留在当前分支</span><br><br>git checkout -<span class="hljs-selector-tag">b</span> <span class="hljs-selector-attr">[branch]</span> <span class="hljs-comment">//新建一个分支，并切换到该分支</span><br><br>git branch <span class="hljs-selector-attr">[branch]</span> <span class="hljs-selector-attr">[commit]</span> <span class="hljs-comment">//新建一个分支，指向指定commit</span><br><br>git branch <span class="hljs-attr">--track</span> <span class="hljs-selector-attr">[branch]</span> <span class="hljs-selector-attr">[remote-branch]</span> <span class="hljs-comment">//新建一个分支，与指定的远程分支建立追踪关系</span><br><br>git checkout <span class="hljs-selector-attr">[branch-name]</span>  /切换到指定分支，并更新工作区<br><br>git checkout -  <span class="hljs-comment">//切换到上一个分支</span><br><br>git branch <span class="hljs-attr">--set-upstream</span> <span class="hljs-selector-attr">[branch]</span> <span class="hljs-selector-attr">[remote-branch]</span> <span class="hljs-comment">//建立追踪关系，在现有分支与指定的远程分支之间</span><br><br>git merge <span class="hljs-selector-attr">[branch]</span>  <span class="hljs-comment">//合并指定分支到当前分支</span><br><br>git cherry-pick <span class="hljs-selector-attr">[commit]</span> <span class="hljs-comment">//选择一个commit，合并进当前分支</span><br><br>git branch -d <span class="hljs-selector-attr">[branch-name]</span> <span class="hljs-comment">//删除分支</span><br><br>git push origin <span class="hljs-attr">--delete</span> <span class="hljs-selector-attr">[branch-name]</span>  <span class="hljs-comment">//删除远程分支</span><br>git branch -dr <span class="hljs-selector-attr">[remote/branch]</span><br></code></pre></td></tr></table></figure><h2 id="6-标签"><a href="#6-标签" class="headerlink" title="6.标签"></a>6.标签</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">tag</span> <span class="hljs-title">//列出所有tag</span><br><br>git <span class="hljs-keyword">tag</span> <span class="hljs-title">[tag</span>] //新建一个<span class="hljs-keyword">tag</span>在当前commit<br><br>git <span class="hljs-keyword">tag</span> <span class="hljs-title">[tag</span>] [commit] //新建一个<span class="hljs-keyword">tag</span>在指定commit<br><br>git <span class="hljs-keyword">tag</span> <span class="hljs-title">-d</span> [<span class="hljs-keyword">tag</span>] //删除本地<span class="hljs-keyword">tag</span><br><br><span class="hljs-title">git</span> push origin :refs/tags/[tagName] //删除远程<span class="hljs-keyword">tag</span><br><br><span class="hljs-title">git</span> show [<span class="hljs-keyword">tag</span>] //查看<span class="hljs-keyword">tag</span>信息<br></code></pre></td></tr></table></figure><h2 id="7-查看信息"><a href="#7-查看信息" class="headerlink" title="7.查看信息"></a>7.查看信息</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">git status <span class="hljs-regexp">//</span>显示有变更的文件<br><br>git log <span class="hljs-regexp">//</span>显示当前分支的版本历史<br><br>git log --stat <span class="hljs-regexp">//</span>显示commit历史，以及每次commit发生变更的文件<br><br>git log -S [keyword] <span class="hljs-regexp">//</span>搜索提交历史，根据关键词<br><br>git log --oneline --decorate --graph --all <span class="hljs-regexp">//</span>查看分支图<br><span class="hljs-regexp">//</span> --oneline 日志单行显示<br><span class="hljs-regexp">//</span> --graph分支图显示<br><span class="hljs-regexp">//</span> --decorate 可显示分支名称<br><span class="hljs-regexp">//</span> --all显示所有分支<br></code></pre></td></tr></table></figure><h2 id="8-远程同步"><a href="#8-远程同步" class="headerlink" title="8.远程同步"></a>8.远程同步</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">git</span> <span class="hljs-selector-tag">fetch</span> <span class="hljs-selector-attr">[remote]</span> <span class="hljs-comment">//下载远程仓库的所有变动</span><br><br><span class="hljs-selector-tag">git</span> <span class="hljs-selector-tag">remote</span> <span class="hljs-selector-tag">-v</span> <span class="hljs-comment">//显示所有远程仓库</span><br><br><span class="hljs-selector-tag">git</span> <span class="hljs-selector-tag">remote</span> <span class="hljs-selector-tag">show</span> <span class="hljs-selector-attr">[remote]</span> <span class="hljs-comment">//显示某个远程仓库的信息</span><br><br><span class="hljs-selector-tag">git</span> <span class="hljs-selector-tag">remote</span> <span class="hljs-selector-tag">add</span> <span class="hljs-selector-attr">[shortname]</span> <span class="hljs-selector-attr">[url]</span> <span class="hljs-comment">//增加一个新的远程仓库，并命名</span><br><br><span class="hljs-selector-tag">git</span> <span class="hljs-selector-tag">pull</span> <span class="hljs-selector-attr">[remote]</span> <span class="hljs-selector-attr">[branch]</span> <span class="hljs-comment">//取回远程仓库的变化，并与本地分支合并</span><br><br><span class="hljs-selector-tag">git</span> <span class="hljs-selector-tag">push</span> <span class="hljs-selector-attr">[remote]</span> <span class="hljs-selector-attr">[branch]</span> <span class="hljs-comment">//上传本地指定分支到远程仓库</span><br></code></pre></td></tr></table></figure><h3 id="关于git-fetch-和-git-pull"><a href="#关于git-fetch-和-git-pull" class="headerlink" title="关于git fetch 和 git pull"></a>关于git fetch 和 git pull</h3><blockquote><p>笼统的来说<code>git pull</code>约等于<code>git fetch</code>+<code>git merge</code>。<br>区别在于<code>git fetch</code>之后需要<code>git log -p FETCH_HEAD</code>来查看差异，然后通过<code>git merge FETCH_HEAD</code>合并，而<code>git pull</code>会将代码直接合并，造成冲突后需要手动解决。<br>了解更多关于git fetch <a href="https://www.cnblogs.com/runnerjack/p/9342362.html">git fetch详解</a>。</p></blockquote><h2 id="9-撤销"><a href="#9-撤销" class="headerlink" title="9.撤销"></a>9.撤销</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs scss">git checkout <span class="hljs-selector-attr">[file]</span> <span class="hljs-comment">//恢复暂存区的指定文件到工作区</span><br><br>git checkout <span class="hljs-selector-attr">[commit]</span> <span class="hljs-selector-attr">[file]</span> <span class="hljs-comment">//恢复某个commit的指定文件到暂存区和工作区</span><br><br>git checkout . <span class="hljs-comment">//恢复暂存区的所有文件到工作区</span><br><br>git reset <span class="hljs-selector-attr">[file]</span> <span class="hljs-comment">//重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><br>git reset <span class="hljs-attr">--hard</span> <span class="hljs-comment">//重置暂存区与工作区，与上一次commit保持一致</span><br><br>git reset <span class="hljs-selector-attr">[commit]</span> <span class="hljs-comment">//重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><br>git reset <span class="hljs-attr">--hard</span> <span class="hljs-selector-attr">[commit]</span> <span class="hljs-comment">//重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><br>git reset <span class="hljs-attr">--keep</span> <span class="hljs-selector-attr">[commit]</span> <span class="hljs-comment">//重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br></code></pre></td></tr></table></figure><h2 id="查看更多"><a href="#查看更多" class="headerlink" title="查看更多"></a>查看更多</h2><p><a href="https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html">git 常用命令</a><br><a href="https://www.ruanyifeng.com/blog/2012/07/git.html">git分支管理策略</a><br><a href="https://www.ruanyifeng.com/blog/2015/12/git-workflow.html">git工作流程</a></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>First Blog</title>
    <link href="/2022/07/29/first_blog/"/>
    <url>/2022/07/29/first_blog/</url>
    
    <content type="html"><![CDATA[<h2 id="第一次使用hexo"><a href="#第一次使用hexo" class="headerlink" title="第一次使用hexo"></a>第一次使用hexo</h2><blockquote><p>之前了解过一些快速搭建静态博客的方法，例如hexo，wordpress等。<br>但是一直没有实际动手操作。因为我当初可能想的是自己从零开始写前端，后端，然后发布到自己的服务上，相关技术也花了一些时间去了解，但是感觉自己当前技术栈不够深，还是先继续学习，然后把这项计划规划到毕设上，这样比较稳妥一些，也能做出更好的作品，强迫症患者的偏执（恼）。</p></blockquote><blockquote><p>之前的记录都发布到了博客园上，最近准备迁移过来，可能要花一些时间。</p></blockquote><p>More info: <a href="https://home.cnblogs.com/u/burnedWings">我的博客园</a></p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>寄语</tag>
      
      <tag>first_blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
